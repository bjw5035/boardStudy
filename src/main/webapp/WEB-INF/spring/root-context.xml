<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Root Context: defines shared resources visible to all other web components -->
    <!-- for mysql conection Pool-->
<!--    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">-->
<!--        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>-->
<!--        <property name="url" value="jdbc:mysql://localhost:3306/webdb?serverTimezone=UTC"/>-->
<!--        <property name="username" value="user1"/>-->
<!--        <property name="password" value="rootpass1!!"/>-->
<!--    </bean>-->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="#{config['db.driverClassName']}"></property>
        <property name="url" value="#{config['db.jdbcUrl']}"></property>
        <property name="username" value="#{config['db.username']}"></property>
        <property name="password" value="#{config['db.password']}"></property>
    </bean>

<!--    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
<!--        <property name="dataSource" ref="dataSource"/>-->
<!--        <property name="configLocation" value="classpath:/sqlmap/mybatis-config.xml"/>-->
<!--    </bean>-->

    <!-- 마이바티스 SqlSession 등록하기 (xml 방식으로 bean 등록) -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- mybatis-config.xml 설정 불러오기 -->
        <property name="configLocation" value="classpath:/sqlmap/mybatis-config.xml" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- SqlSessionTemplate : 기본 SQL 실행 + 트랜잭션 관리 역할을 하는 SqlSession을 생성할 수 있게 하는 객체(Spring bean으로 등록해야함.) -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
<!--        <constructor-arg ref="sqlSessionFactoryBean" />-->
    </bean>

    <!-- 스프링에서 사용하는 proxy를 이용한 트랜잭션 제어가 안될 경우 추가적인 트랜잭션 매니저를 추가해서 문제 해결 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!--
          파일 업로드를 위한 MutipartResolver 구현체 CommonsMultipartResolver  bean 등록 -> CommonsMultipartResolver를 bean으로 등록하면
            multipart/form-data 형식으로 요청 시  input type="file" 태그를 자동적으로 인식하여 MultipartFile 객체로 반환하고
            파일 외의 데이터(정수, 문자열 등의 텍스트 데이터)는 기존처럼 사용 가능(MultipartRequest 필요 없음)
  -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="104857600"/>
        <property name="maxUploadSizePerFile" value="104857600"/>
        <property name="maxInMemorySize" value="104857600"/>
    </bean>

    <!--
		104857600 byte == 100MB
		20971520 byte == 20MB

		maxUploadSize
			: 한 요청당 업로드가 허용되는 최대 용량을 바이트 단위로 설정.
			-1 은 제한이 없다는 뜻으로 이 프로퍼티를 지정하지 않을때 기본값.

		maxUploadSizePerFile
		 : 한 파일당 업로드가 허용되는 최대 용량을 바이트 단위로 설정.
			-1 은 제한이 없다는 뜻으로 이 프로퍼티를 지정하지 않을때 기본값.

		maxInMemorySize
			: 디스크에 저장하지 않고 메모리에 유지하도록
			허용하는 바이트 단위의 최대 용량을 설정.

	 		사이즈가 이보다 클 경우 이 사이즈 이상의 데이터는 파일에 저장됩니다.
			 기본값은 10240 바이트.
	 -->

</beans>